version: "3"

services:
  frontend:
    container_name: todo_frontend
    build: ./frontend
    command: npm run start
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/:/usr/src/app/

  backend:
    container_name: todo_backend
    build: ./backend
    command: npm run start:dev
    ports:
      - "3001:3000"
    volumes:
     - ./backend:/usr/src/app/

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: rootpass
    volumes:
      - todo_volume:/data/db

  mongo-express:
    container_name: mongo_panel
    image: mongo-express
    ports:
      - "8080:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpass
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb

#  auth:
#    container_name: auth_app
#    build: ./auth
#    command: npm run start
#    restart: unless-stopped
#    depends_on:
#      - auth_db
#    ports:
#      - "3002:3002"
#    environment:
#      PORT: 3002
#      DB: "mongodb://auth_db:27017/test"
#      API_URL: "http://api:3001/api"
#
#  auth_db:
#    container_name: auth_db
#    image: mongo:latest
#    logging:
#      driver: "none"
#    volumes:
#      - todo_volume:/data/db
#
#  nginx:
#    container_name: nginx_proxy
#    image: nginx:stable-alpine
#    ports:
#      - "80:80"
#    volumes:
#      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
#    depends_on:
#      - frontend

volumes:
  todo_volume:
